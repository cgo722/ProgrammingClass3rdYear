global proc float Add(float $numbers[])
{
    float $sum = 0;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $sum += $numbers[$i];
    }
    return $sum;
}

global proc float Subtract(float $numbers[])
{
    float $difference = $numbers[0];
    
    for($i=1; $i<size($numbers); $i++)
    {
        $difference -= $numbers[$i];
    }
    return $difference;
}

global proc float Multiply(float $numbers[])
{
    float $total = $numbers[0];
    
    for($i=1; $i<size($numbers); $i++)
    {
        $total *= $numbers[$i];
    }
    return $total;
}

global proc float Divide(float $numbers[])
{
    float $total = $numbers[0];
    
    for($i=1; $i<size($numbers); $i++)
    {
        $total /= $numbers[$i];
    }
    return $total;
}


global proc float Power(float $numbers[])
{
    $results = 0;
    $results = `pow $numbers[0] $numbers[1]`;
    return $results;
}

global proc float Mean(float $numbers[])
{
    float $sum = 0;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $sum += $numbers[$i]/size($numbers);
    }
    return $sum;
}


global proc float Median(float $numbers[])
{
    float $medianValue;
    int $size = size($numbers);
    $numbers = sort($numbers);
    
    if(size($numbers) % 2 == 0)
    {
        int $highIndex = ($size / 2);
        int $lowIndex = $highIndex - 1;
        $medianValue = ($numbers[$highIndex] + $numbers[$lowIndex]) / 2;
    }
    else
    {        
       int $index = ($size - 1) / 2;
       $medianValue = $numbers[$index];
    }
    return $medianValue;
}


global proc float[] Mode(float $numbers[])
{
    float $mode[];
    float $values[];
    int $freq[];
    for($i=0; $i<size($numbers); $i++)
    {
    if (floatArrayContains($numbers[$i], $values) == 0)
	{
		$values[size($values)] = $numbers[$i];
		$freq[size($freq)] = 1;
	}
	else
	{
		int $index = floatArrayFind($numbers[$i], 0, $values);
		$freq[$index] = $freq[$index] + 1;
	}
	}
	int $maxValue = 0;
	for($i = 0; $i<size($freq); $i++)
	{
		if($freq[$i] > $maxValue)
			{
				$maxValue = $freq[$i];
			}
	}
	while(intArrayFind($maxValue, 0, $freq) != -1)
	{
	int $modeIndex = intArrayFind($maxValue, 0, $freq);
	$mode[size($mode)] = $values[$modeIndex];
	$freq[$modeIndex] = 0;
	}

    return $mode;
}


global proc float[] Calculator(string $function, float $numbers[])
    {
        float $total[];
        if($function == "Add")
        {
            print (floatArrayToString($numbers, " + "));
            $total[0] = Add($numbers);
            print " = ";
            print $total[0];
        }
        if($function == "Subtract")
        {
            print (floatArrayToString($numbers, " - "));
            $total[0] = Subtract($numbers);
            print " = ";
            print $total[0];
        }
        if($function == "Multiply")
        {
            print (floatArrayToString($numbers, " * "));
            $total[0] = Multiply($numbers);
            print " = ";
            print $total[0];
        }
        if($function == "Divide")
        {
            print (floatArrayToString ($numbers, " / "));
            $total[0] = Divide($numbers);
            print " = ";
            print $total[0];             
        }
        if($function == "Power")
        {
            print (floatArrayToString($numbers, " ^ "));
            $total[0] = Power($numbers);
            print " = ";
            print $total[0];               
        }
        if($function == "Mean")
        {
            print "The Average of ";
            print (floatArrayToString($numbers, ", "));
            $total[0] = Mean($numbers);
            print " equals ";
            print $total[0];   
        }
        if($function == "Median")
        {
            print "The Middle numbers of ";
            print (floatArrayToString($numbers, ", "));
            $total[0] = Median($numbers);
            print " is ";
            print $total[0];   
        }
        if($function == "Mode")
        {
            print "The Most Frequent number of ";
            print (floatArrayToString($numbers, ", "));
            $total = Mode($numbers);
            print " is "
            print $total[0];
        }
        return $total;
    }
Calculator("Mean", {4, 5, 6});


