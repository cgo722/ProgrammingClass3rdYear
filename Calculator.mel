global float $results;

global proc float Add(float $numbers[])
{
    float $sum = 0;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $sum += $numbers[$i];
    }
    return $sum;
}

global proc float Subtract(float $numbers[])
{
    float $difference = $numbers[0];
    
    for($i=1; $i<size($numbers); $i++)
    {
        $difference -= $numbers[$i];
    }
    return $difference;
}

global proc float Multiply(float $numbers[])
{
    float $total = $numbers[0];
    
    for($i=1; $i<size($numbers); $i++)
    {
        $total *= $numbers[$i];
    }
    return $total;
}
$resluts = Multiply({2, 6, 19})

global proc float Divide(float $numbers[])
{
    float $total = $numbers[0];
    
    for($i=1; $i<size($numbers); $i++)
    {
        $total /= $numbers[$i];
    }
    return $total;
}
$results = Divide({200, 2, 2})

global proc float Power(float $num1, float $num2)
{
    $results = 0;
    $results = `pow $num1 $num2`;
    return $results;
}
$results = Power(2, 13)

global proc float Mean(float $numbers[])
{
    float $sum = 0;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $sum += $numbers[$i]/size($numbers);
    }
    return $sum;
}
$results = Mean({1, 2, 5, 6, 7, 345});

global proc float Median(float $numbers[])
{
    float $sorted[] = `sort $numbers`;
    int $total = 0;
    int $total2 = 0;
    
    if(size($numbers) % 2 == 0)
    {
        $total = size($numbers)/2;
        return $sorted[$total];

    }
    else
    {        
        $total = size($sorted)/2;
        $total = `floor $total`;
        $total2 = (size($sorted)/2) + 1;
        $total = ($total + $total2) / 2;
        return $sorted[$total];

    }
}
$results = Median({5, 3, 6, 7, 1, 10, 32});

global proc float[] Mode(float $numbers[])
{
    int $modal = 0;
    float $count[];
    int $highestValue = 0;
    for($i=0; $i<size($numbers); $i++)
    {
        $modal = floatArrayCount($numbers[$i], $numbers);
        floatArrayInsertAtIndex($i, $count, $modal);
    }

    return $count;
}
Mode({1, 1, 2, 2, 2, 5, 6, 4, 9});